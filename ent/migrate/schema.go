// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CartItemsColumns holds the columns for the "cart_items" table.
	CartItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "product_cart_items", Type: field.TypeInt, Nullable: true},
	}
	// CartItemsTable holds the schema information for the "cart_items" table.
	CartItemsTable = &schema.Table{
		Name:       "cart_items",
		Columns:    CartItemsColumns,
		PrimaryKey: []*schema.Column{CartItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cart_items_products_cart_items",
				Columns:    []*schema.Column{CartItemsColumns[2]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "status", Type: field.TypeString, Default: "pending"},
		{Name: "placed_at", Type: field.TypeTime},
		{Name: "user_orders", Type: field.TypeInt, Nullable: true},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "orders_users_orders",
				Columns:    []*schema.Column{OrdersColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PasswordTokensColumns holds the columns for the "password_tokens" table.
	PasswordTokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "hash", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "password_token_user", Type: field.TypeInt},
	}
	// PasswordTokensTable holds the schema information for the "password_tokens" table.
	PasswordTokensTable = &schema.Table{
		Name:       "password_tokens",
		Columns:    PasswordTokensColumns,
		PrimaryKey: []*schema.Column{PasswordTokensColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "password_tokens_users_user",
				Columns:    []*schema.Column{PasswordTokensColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "quantity", Type: field.TypeInt},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "verified", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// OrderCartItemsColumns holds the columns for the "order_cart_items" table.
	OrderCartItemsColumns = []*schema.Column{
		{Name: "order_id", Type: field.TypeInt},
		{Name: "cart_item_id", Type: field.TypeInt},
	}
	// OrderCartItemsTable holds the schema information for the "order_cart_items" table.
	OrderCartItemsTable = &schema.Table{
		Name:       "order_cart_items",
		Columns:    OrderCartItemsColumns,
		PrimaryKey: []*schema.Column{OrderCartItemsColumns[0], OrderCartItemsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_cart_items_order_id",
				Columns:    []*schema.Column{OrderCartItemsColumns[0]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "order_cart_items_cart_item_id",
				Columns:    []*schema.Column{OrderCartItemsColumns[1]},
				RefColumns: []*schema.Column{CartItemsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CartItemsTable,
		OrdersTable,
		PasswordTokensTable,
		ProductsTable,
		UsersTable,
		OrderCartItemsTable,
	}
)

func init() {
	CartItemsTable.ForeignKeys[0].RefTable = ProductsTable
	OrdersTable.ForeignKeys[0].RefTable = UsersTable
	PasswordTokensTable.ForeignKeys[0].RefTable = UsersTable
	OrderCartItemsTable.ForeignKeys[0].RefTable = OrdersTable
	OrderCartItemsTable.ForeignKeys[1].RefTable = CartItemsTable
}
